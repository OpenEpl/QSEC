.程序集 Hash

.子程序 取哈希值_字节集_纯易, 整数型, , 仅用于说明算法，无太大价值，速度极慢
.参数 字节集, 字节集
.局部变量 seed, 整数型
.局部变量 hash, 整数型
.局部变量 i, 整数型
.局部变量 字节集长度, 整数型
.局部变量 返回值, 整数型

seed = 131
hash = 0
字节集长度 = 取字节集长度 (字节集)
.计次循环首 (字节集长度, i)
    hash = 到整数 (hash * seed) + 字节集[i]
.计次循环尾 ()
返回值 = hash
返回 (返回值)
.子程序 取哈希值_字节集, 整数型, 公开, 一定等同于“QS取哈希值_内存 (取变量数据地址_字节集 (字节集), 取字节集长度 (字节集))”
.参数 字节集, 字节集

返回 (取哈希值_内存 (取变量数据地址_字节集 (字节集), 取字节集长度 (字节集)))
.子程序 取哈希值_文本, 整数型, 公开, 一定等同于“QS取哈希值_内存 (取变量数据地址_文本型 (文本), 取文本长度 (文本))”
.参数 文本, 文本型

返回 (取哈希值_内存 (取变量数据地址_文本型 (文本), 取文本长度 (文本)))
.子程序 取哈希值_内存, 整数型, 公开, 汇编版，速度极快
.参数 起始地址, 整数型
.参数 长度, 整数型

' 汇编代码（需要使用AsmToECode程序编译）:
' @arg startptr
' @arg lenght
' ;定义常量
' seed equ 131

' mov eax,startptr
' mov ecx,lenght
' zero ebx
' jecxz return
' @@:
' imul ebx,ebx,seed
' movzx edx,byte ptr [eax]
' add ebx,edx
' inc eax
' loop @B
' return:
' mov eax,ebx
' @ret
置入代码 ({139, 69, 8, 139, 77, 12, 51, 219, 227, 14, 105, 219, 131, 0, 0, 0, 15, 182, 16, 3, 218, 64, 226, 242, 139, 195, 201, 194, 8, 0})
返回 (0)