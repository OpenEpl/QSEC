.程序集 Utils

.子程序 乘1点5, 整数型
.参数 a, 整数型

返回 (asm_整数加法 (a, 右移 (a, 1)))
.子程序 asm_读整型内存_指定偏移, 整数型
.参数 读取地址, 整数型
.参数 偏移, 整数型

' 汇编代码（需要使用AsmToECode程序编译）:
' @arg 读取地址
' @arg 偏移
' mov eax,读取地址
' mov ecx,偏移
' mov eax,[eax+ecx]
' @ret
置入代码 ({139, 69, 8, 139, 77, 12, 139, 4, 1, 201, 194, 8, 0})
' 返回 (指针到整数 (读取地址 ＋ 偏移))
' 兼容5.11
返回 (0)
.子程序 asm_整数加法, 整数型
.参数 a, 整数型
.参数 b, 整数型

置入代码 ({201, 139, 68, 36, 4, 3, 68, 36, 8, 194, 8, 0})
' 返回 (a ＋ b)
返回 (0)
.子程序 asm_写整型内存_指定偏移, 整数型, , 返回 内存地址 + 偏移
.参数 内存地址, 整数型
.参数 内容, 整数型
.参数 偏移, 整数型

置入代码 ({139, 77, 12, 139, 69, 8, 3, 69, 16, 137, 8, 201, 194, 12, 0})
返回 (0)
.子程序 取变量数据地址_整数型, 整数型
.参数 变量, 整数型, 参考

' mov eax,[ebp+8]
' leave
' retn 4
置入代码 ({139, 69, 8, 201, 194, 4, 0})
' 返回 (取变量数据地址 (变量))
返回 (0)
.子程序 asm_交换变量_数组
.参数 a, 通用型, 参考 数组
.参数 b, 通用型, 参考 数组

置入代码 ({139, 69, 8, 139, 93, 12, 139, 8, 139, 19, 137, 16, 137, 11})
.子程序 取This指针, 整数型, , 必须直接从类中调用！

置入代码 ({201, 139, 69, 8, 139, 0, 195})
' 汇编代码（需要使用AsmToECode程序编译）:
' leave
' mov eax,[ebp+8]
' mov eax,[eax]
' retn
返回 (0)
.子程序 取类函数地址, 整数型, , 调用约定：EThisCall
.参数 ThisPtr, 整数型
.参数 FunctionIndex, 整数型, , 从0开始

' 汇编代码（需要使用AsmToECode程序编译）:
' @arg ThisPtr
' @arg FunctionIndex
' mov ebx , ThisPtr
' mov ebx , [ebx] ;ebx=虚表首元素地址
' mov eax , FunctionIndex
' lea eax , [ebx+eax*4]
' mov eax , [eax]
' @ret
置入代码 ({139, 93, 8, 139, 27, 139, 69, 12, 141, 4, 131, 139, 0, 201, 194, 8, 0})
返回 (0)
.子程序 ASM_调用子程序_1参数, 整数型
.参数 address, 整数型
.参数 arg1, 整数型

' AsmToECode代码:@arg address
' AsmToECode代码:@arg arg1
' AsmToECode代码:push arg1
' AsmToECode代码:call address
' AsmToECode代码:@ret
置入代码 ({255, 117, 12, 255, 85, 8, 201, 194, 8, 0})
返回 (0)